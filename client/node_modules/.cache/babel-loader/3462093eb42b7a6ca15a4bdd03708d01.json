{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * No unused variables\r\n *\r\n * A GraphQL operation is only valid if all variables defined by an operation\r\n * are used, either directly or within a spread fragment.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\r\n */\n\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const {\n          node\n        } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".` : `Variable \"$${variableName}\" is never used.`, {\n              nodes: variableDef\n            }));\n          }\n        }\n      }\n\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n\n  };\n}","map":{"version":3,"names":["GraphQLError","NoUnusedVariablesRule","context","variableDefs","OperationDefinition","enter","leave","operation","variableNameUsed","Object","create","usages","getRecursiveVariableUsages","node","name","value","variableDef","variableName","variable","reportError","nodes","VariableDefinition","def","push"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * No unused variables\r\n *\r\n * A GraphQL operation is only valid if all variables defined by an operation\r\n * are used, either directly or within a spread fragment.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\r\n */\r\nexport function NoUnusedVariablesRule(context) {\r\n  let variableDefs = [];\r\n  return {\r\n    OperationDefinition: {\r\n      enter() {\r\n        variableDefs = [];\r\n      },\r\n\r\n      leave(operation) {\r\n        const variableNameUsed = Object.create(null);\r\n        const usages = context.getRecursiveVariableUsages(operation);\r\n\r\n        for (const { node } of usages) {\r\n          variableNameUsed[node.name.value] = true;\r\n        }\r\n\r\n        for (const variableDef of variableDefs) {\r\n          const variableName = variableDef.variable.name.value;\r\n\r\n          if (variableNameUsed[variableName] !== true) {\r\n            context.reportError(\r\n              new GraphQLError(\r\n                operation.name\r\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\r\n                  : `Variable \"$${variableName}\" is never used.`,\r\n                {\r\n                  nodes: variableDef,\r\n                },\r\n              ),\r\n            );\r\n          }\r\n        }\r\n      },\r\n    },\r\n\r\n    VariableDefinition(def) {\r\n      variableDefs.push(def);\r\n    },\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;EAC7C,IAAIC,YAAY,GAAG,EAAnB;EACA,OAAO;IACLC,mBAAmB,EAAE;MACnBC,KAAK,GAAG;QACNF,YAAY,GAAG,EAAf;MACD,CAHkB;;MAKnBG,KAAK,CAACC,SAAD,EAAY;QACf,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;QACA,MAAMC,MAAM,GAAGT,OAAO,CAACU,0BAAR,CAAmCL,SAAnC,CAAf;;QAEA,KAAK,MAAM;UAAEM;QAAF,CAAX,IAAuBF,MAAvB,EAA+B;UAC7BH,gBAAgB,CAACK,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAhB,GAAoC,IAApC;QACD;;QAED,KAAK,MAAMC,WAAX,IAA0Bb,YAA1B,EAAwC;UACtC,MAAMc,YAAY,GAAGD,WAAW,CAACE,QAAZ,CAAqBJ,IAArB,CAA0BC,KAA/C;;UAEA,IAAIP,gBAAgB,CAACS,YAAD,CAAhB,KAAmC,IAAvC,EAA6C;YAC3Cf,OAAO,CAACiB,WAAR,CACE,IAAInB,YAAJ,CACEO,SAAS,CAACO,IAAV,GACK,cAAaG,YAAa,iCAAgCV,SAAS,CAACO,IAAV,CAAeC,KAAM,IADpF,GAEK,cAAaE,YAAa,kBAHjC,EAIE;cACEG,KAAK,EAAEJ;YADT,CAJF,CADF;UAUD;QACF;MACF;;IA7BkB,CADhB;;IAiCLK,kBAAkB,CAACC,GAAD,EAAM;MACtBnB,YAAY,CAACoB,IAAb,CAAkBD,GAAlB;IACD;;EAnCI,CAAP;AAqCD"},"metadata":{},"sourceType":"module"}