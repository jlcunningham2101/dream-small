{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * Unique directive names\r\n *\r\n * A GraphQL document is only valid if all defined directives have unique names.\r\n */\n\nexport function UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(`Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`, {\n          nodes: node.name\n        }));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(`There can be only one directive named \"@${directiveName}\".`, {\n          nodes: [knownDirectiveNames[directiveName], node.name]\n        }));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueDirectiveNamesRule","context","knownDirectiveNames","Object","create","schema","getSchema","DirectiveDefinition","node","directiveName","name","value","getDirective","reportError","nodes"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * Unique directive names\r\n *\r\n * A GraphQL document is only valid if all defined directives have unique names.\r\n */\r\nexport function UniqueDirectiveNamesRule(context) {\r\n  const knownDirectiveNames = Object.create(null);\r\n  const schema = context.getSchema();\r\n  return {\r\n    DirectiveDefinition(node) {\r\n      const directiveName = node.name.value;\r\n\r\n      if (\r\n        schema !== null &&\r\n        schema !== void 0 &&\r\n        schema.getDirective(directiveName)\r\n      ) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\r\n            {\r\n              nodes: node.name,\r\n            },\r\n          ),\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (knownDirectiveNames[directiveName]) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `There can be only one directive named \"@${directiveName}\".`,\r\n            {\r\n              nodes: [knownDirectiveNames[directiveName], node.name],\r\n            },\r\n          ),\r\n        );\r\n      } else {\r\n        knownDirectiveNames[directiveName] = node.name;\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EAChD,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA5B;EACA,MAAMC,MAAM,GAAGJ,OAAO,CAACK,SAAR,EAAf;EACA,OAAO;IACLC,mBAAmB,CAACC,IAAD,EAAO;MACxB,MAAMC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAhC;;MAEA,IACEN,MAAM,KAAK,IAAX,IACAA,MAAM,KAAK,KAAK,CADhB,IAEAA,MAAM,CAACO,YAAP,CAAoBH,aAApB,CAHF,EAIE;QACAR,OAAO,CAACY,WAAR,CACE,IAAId,YAAJ,CACG,eAAcU,aAAc,yDAD/B,EAEE;UACEK,KAAK,EAAEN,IAAI,CAACE;QADd,CAFF,CADF;QAQA;MACD;;MAED,IAAIR,mBAAmB,CAACO,aAAD,CAAvB,EAAwC;QACtCR,OAAO,CAACY,WAAR,CACE,IAAId,YAAJ,CACG,2CAA0CU,aAAc,IAD3D,EAEE;UACEK,KAAK,EAAE,CAACZ,mBAAmB,CAACO,aAAD,CAApB,EAAqCD,IAAI,CAACE,IAA1C;QADT,CAFF,CADF;MAQD,CATD,MASO;QACLR,mBAAmB,CAACO,aAAD,CAAnB,GAAqCD,IAAI,CAACE,IAA1C;MACD;;MAED,OAAO,KAAP;IACD;;EAlCI,CAAP;AAoCD"},"metadata":{},"sourceType":"module"}