{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\n\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueInputFieldNamesRule","context","knownNameStack","knownNames","Object","create","ObjectValue","enter","push","leave","pop","ObjectField","node","fieldName","name","value","reportError","concat"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;EACjD,IAAIC,cAAc,GAAG,EAArB;EACA,IAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;EACA,OAAO;IACLC,WAAW,EAAE;MACXC,KAAK,EAAE,SAASA,KAAT,GAAiB;QACtBL,cAAc,CAACM,IAAf,CAAoBL,UAApB;QACAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;MACD,CAJU;MAKXI,KAAK,EAAE,SAASA,KAAT,GAAiB;QACtBN,UAAU,GAAGD,cAAc,CAACQ,GAAf,EAAb;MACD;IAPU,CADR;IAULC,WAAW,EAAE,SAASA,WAAT,CAAqBC,IAArB,EAA2B;MACtC,IAAIC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA1B;;MAEA,IAAIZ,UAAU,CAACU,SAAD,CAAd,EAA2B;QACzBZ,OAAO,CAACe,WAAR,CAAoB,IAAIjB,YAAJ,CAAiB,6CAA6CkB,MAA7C,CAAoDJ,SAApD,EAA+D,KAA/D,CAAjB,EAAwF,CAACV,UAAU,CAACU,SAAD,CAAX,EAAwBD,IAAI,CAACE,IAA7B,CAAxF,CAApB;MACD,CAFD,MAEO;QACLX,UAAU,CAACU,SAAD,CAAV,GAAwBD,IAAI,CAACE,IAA7B;MACD;IACF;EAlBI,CAAP;AAoBD"},"metadata":{},"sourceType":"module"}