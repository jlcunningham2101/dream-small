{"ast":null,"code":"/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}","map":{"version":3,"names":["naturalCompare","aStr","bStr","aIdx","bIdx","length","aChar","charCodeAt","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","code","isNaN"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/jsutils/naturalCompare.mjs"],"sourcesContent":["/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EACjD,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,IAAI,GAAG,CAAX;;EAEA,OAAOD,IAAI,GAAGF,IAAI,CAACI,MAAZ,IAAsBD,IAAI,GAAGF,IAAI,CAACG,MAAzC,EAAiD;IAC/C,IAAIC,KAAK,GAAGL,IAAI,CAACM,UAAL,CAAgBJ,IAAhB,CAAZ;IACA,IAAIK,KAAK,GAAGN,IAAI,CAACK,UAAL,CAAgBH,IAAhB,CAAZ;;IAEA,IAAIK,OAAO,CAACH,KAAD,CAAP,IAAkBG,OAAO,CAACD,KAAD,CAA7B,EAAsC;MACpC,IAAIE,IAAI,GAAG,CAAX;;MAEA,GAAG;QACD,EAAEP,IAAF;QACAO,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAYJ,KAAZ,GAAoBK,OAA3B;QACAL,KAAK,GAAGL,IAAI,CAACM,UAAL,CAAgBJ,IAAhB,CAAR;MACD,CAJD,QAISM,OAAO,CAACH,KAAD,CAAP,IAAkBI,IAAI,GAAG,CAJlC;;MAMA,IAAIE,IAAI,GAAG,CAAX;;MAEA,GAAG;QACD,EAAER,IAAF;QACAQ,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAYJ,KAAZ,GAAoBG,OAA3B;QACAH,KAAK,GAAGN,IAAI,CAACK,UAAL,CAAgBH,IAAhB,CAAR;MACD,CAJD,QAISK,OAAO,CAACD,KAAD,CAAP,IAAkBI,IAAI,GAAG,CAJlC;;MAMA,IAAIF,IAAI,GAAGE,IAAX,EAAiB;QACf,OAAO,CAAC,CAAR;MACD;;MAED,IAAIF,IAAI,GAAGE,IAAX,EAAiB;QACf,OAAO,CAAP;MACD;IACF,CAxBD,MAwBO;MACL,IAAIN,KAAK,GAAGE,KAAZ,EAAmB;QACjB,OAAO,CAAC,CAAR;MACD;;MAED,IAAIF,KAAK,GAAGE,KAAZ,EAAmB;QACjB,OAAO,CAAP;MACD;;MAED,EAAEL,IAAF;MACA,EAAEC,IAAF;IACD;EACF;;EAED,OAAOH,IAAI,CAACI,MAAL,GAAcH,IAAI,CAACG,MAA1B;AACD;AACD,IAAIM,OAAO,GAAG,EAAd;AACA,IAAIE,OAAO,GAAG,EAAd;;AAEA,SAASJ,OAAT,CAAiBK,IAAjB,EAAuB;EACrB,OAAO,CAACC,KAAK,CAACD,IAAD,CAAN,IAAgBH,OAAO,IAAIG,IAA3B,IAAmCA,IAAI,IAAID,OAAlD;AACD"},"metadata":{},"sourceType":"module"}