{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\n\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueDirectiveNamesRule","context","knownDirectiveNames","Object","create","schema","getSchema","DirectiveDefinition","node","directiveName","name","value","getDirective","reportError","concat"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EAChD,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B;EACA,IAAIC,MAAM,GAAGJ,OAAO,CAACK,SAAR,EAAb;EACA,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;MACtD,IAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA9B;;MAEA,IAAIN,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,IAAwCA,MAAM,CAACO,YAAP,CAAoBH,aAApB,CAA5C,EAAgF;QAC9ER,OAAO,CAACY,WAAR,CAAoB,IAAId,YAAJ,CAAiB,gBAAgBe,MAAhB,CAAuBL,aAAvB,EAAsC,0DAAtC,CAAjB,EAAoHD,IAAI,CAACE,IAAzH,CAApB;QACA;MACD;;MAED,IAAIR,mBAAmB,CAACO,aAAD,CAAvB,EAAwC;QACtCR,OAAO,CAACY,WAAR,CAAoB,IAAId,YAAJ,CAAiB,4CAA4Ce,MAA5C,CAAmDL,aAAnD,EAAkE,KAAlE,CAAjB,EAA2F,CAACP,mBAAmB,CAACO,aAAD,CAApB,EAAqCD,IAAI,CAACE,IAA1C,CAA3F,CAApB;MACD,CAFD,MAEO;QACLR,mBAAmB,CAACO,aAAD,CAAnB,GAAqCD,IAAI,CAACE,IAA1C;MACD;;MAED,OAAO,KAAP;IACD;EAhBI,CAAP;AAkBD"},"metadata":{},"sourceType":"module"}