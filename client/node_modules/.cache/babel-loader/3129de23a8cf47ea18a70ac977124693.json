{"ast":null,"code":"/**\r\n * An exported enum describing the different kinds of tokens that the\r\n * lexer emits.\r\n */\nexport let TokenKind;\n/**\r\n * The enum type representing the token kinds values.\r\n *\r\n * @deprecated Please use `TokenKind`. Will be remove in v17.\r\n */\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));","map":{"version":3,"names":["TokenKind"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/language/tokenKind.mjs"],"sourcesContent":["/**\r\n * An exported enum describing the different kinds of tokens that the\r\n * lexer emits.\r\n */\r\nexport let TokenKind;\r\n/**\r\n * The enum type representing the token kinds values.\r\n *\r\n * @deprecated Please use `TokenKind`. Will be remove in v17.\r\n */\r\n\r\n(function (TokenKind) {\r\n  TokenKind['SOF'] = '<SOF>';\r\n  TokenKind['EOF'] = '<EOF>';\r\n  TokenKind['BANG'] = '!';\r\n  TokenKind['DOLLAR'] = '$';\r\n  TokenKind['AMP'] = '&';\r\n  TokenKind['PAREN_L'] = '(';\r\n  TokenKind['PAREN_R'] = ')';\r\n  TokenKind['SPREAD'] = '...';\r\n  TokenKind['COLON'] = ':';\r\n  TokenKind['EQUALS'] = '=';\r\n  TokenKind['AT'] = '@';\r\n  TokenKind['BRACKET_L'] = '[';\r\n  TokenKind['BRACKET_R'] = ']';\r\n  TokenKind['BRACE_L'] = '{';\r\n  TokenKind['PIPE'] = '|';\r\n  TokenKind['BRACE_R'] = '}';\r\n  TokenKind['NAME'] = 'Name';\r\n  TokenKind['INT'] = 'Int';\r\n  TokenKind['FLOAT'] = 'Float';\r\n  TokenKind['STRING'] = 'String';\r\n  TokenKind['BLOCK_STRING'] = 'BlockString';\r\n  TokenKind['COMMENT'] = 'Comment';\r\n})(TokenKind || (TokenKind = {}));\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,SAAJ;AACP;AACA;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,SAAV,EAAqB;EACpBA,SAAS,CAAC,KAAD,CAAT,GAAmB,OAAnB;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,OAAnB;EACAA,SAAS,CAAC,MAAD,CAAT,GAAoB,GAApB;EACAA,SAAS,CAAC,QAAD,CAAT,GAAsB,GAAtB;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,GAAnB;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,GAAvB;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,GAAvB;EACAA,SAAS,CAAC,QAAD,CAAT,GAAsB,KAAtB;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,GAArB;EACAA,SAAS,CAAC,QAAD,CAAT,GAAsB,GAAtB;EACAA,SAAS,CAAC,IAAD,CAAT,GAAkB,GAAlB;EACAA,SAAS,CAAC,WAAD,CAAT,GAAyB,GAAzB;EACAA,SAAS,CAAC,WAAD,CAAT,GAAyB,GAAzB;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,GAAvB;EACAA,SAAS,CAAC,MAAD,CAAT,GAAoB,GAApB;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,GAAvB;EACAA,SAAS,CAAC,MAAD,CAAT,GAAoB,MAApB;EACAA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAAnB;EACAA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAArB;EACAA,SAAS,CAAC,QAAD,CAAT,GAAsB,QAAtB;EACAA,SAAS,CAAC,cAAD,CAAT,GAA4B,aAA5B;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,SAAvB;AACD,CAvBD,EAuBGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAvBZ"},"metadata":{},"sourceType":"module"}