{"ast":null,"code":"import { toError } from '../jsutils/toError.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\r\n * Given an arbitrary value, presumably thrown while attempting to execute a\r\n * GraphQL operation, produce a new GraphQLError aware of the location in the\r\n * document responsible for the original Error.\r\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, {\n    nodes: (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}","map":{"version":3,"names":["toError","GraphQLError","locatedError","rawOriginalError","nodes","path","_nodes","originalError","isLocatedGraphQLError","message","source","positions","error","Array","isArray"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/error/locatedError.mjs"],"sourcesContent":["import { toError } from '../jsutils/toError.mjs';\r\nimport { GraphQLError } from './GraphQLError.mjs';\r\n/**\r\n * Given an arbitrary value, presumably thrown while attempting to execute a\r\n * GraphQL operation, produce a new GraphQLError aware of the location in the\r\n * document responsible for the original Error.\r\n */\r\n\r\nexport function locatedError(rawOriginalError, nodes, path) {\r\n  var _nodes;\r\n\r\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\r\n\r\n  if (isLocatedGraphQLError(originalError)) {\r\n    return originalError;\r\n  }\r\n\r\n  return new GraphQLError(originalError.message, {\r\n    nodes:\r\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\r\n        ? _nodes\r\n        : nodes,\r\n    source: originalError.source,\r\n    positions: originalError.positions,\r\n    path,\r\n    originalError,\r\n  });\r\n}\r\n\r\nfunction isLocatedGraphQLError(error) {\r\n  return Array.isArray(error.path);\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,gBAAtB,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqD;EAC1D,IAAIC,MAAJ;;EAEA,MAAMC,aAAa,GAAGP,OAAO,CAACG,gBAAD,CAA7B,CAH0D,CAGT;;EAEjD,IAAIK,qBAAqB,CAACD,aAAD,CAAzB,EAA0C;IACxC,OAAOA,aAAP;EACD;;EAED,OAAO,IAAIN,YAAJ,CAAiBM,aAAa,CAACE,OAA/B,EAAwC;IAC7CL,KAAK,EACH,CAACE,MAAM,GAAGC,aAAa,CAACH,KAAxB,MAAmC,IAAnC,IAA2CE,MAAM,KAAK,KAAK,CAA3D,GACIA,MADJ,GAEIF,KAJuC;IAK7CM,MAAM,EAAEH,aAAa,CAACG,MALuB;IAM7CC,SAAS,EAAEJ,aAAa,CAACI,SANoB;IAO7CN,IAP6C;IAQ7CE;EAR6C,CAAxC,CAAP;AAUD;;AAED,SAASC,qBAAT,CAA+BI,KAA/B,EAAsC;EACpC,OAAOC,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACP,IAApB,CAAP;AACD"},"metadata":{},"sourceType":"module"}