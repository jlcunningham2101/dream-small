{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\n\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  var oldSchema = context.getSchema();\n  var alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError('Cannot define a new schema within a schema extension.', node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError('Must provide only one schema definition.', node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","LoneSchemaDefinitionRule","context","_ref","_ref2","_oldSchema$astNode","oldSchema","getSchema","alreadyDefined","astNode","getQueryType","getMutationType","getSubscriptionType","schemaDefinitionsCount","SchemaDefinition","node","reportError"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  var oldSchema = context.getSchema();\n  var alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError('Cannot define a new schema within a schema extension.', node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError('Must provide only one schema definition.', node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EAChD,IAAIC,IAAJ,EAAUC,KAAV,EAAiBC,kBAAjB;;EAEA,IAAIC,SAAS,GAAGJ,OAAO,CAACK,SAAR,EAAhB;EACA,IAAIC,cAAc,GAAG,CAACL,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,kBAAkB,GAAGC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACG,OAAtF,MAAmG,IAAnG,IAA2GJ,kBAAkB,KAAK,KAAK,CAAvI,GAA2IA,kBAA3I,GAAgKC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACI,YAAV,EAA/N,MAA6P,IAA7P,IAAqQN,KAAK,KAAK,KAAK,CAApR,GAAwRA,KAAxR,GAAgSE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACK,eAAV,EAA9V,MAA+X,IAA/X,IAAuYR,IAAI,KAAK,KAAK,CAArZ,GAAyZA,IAAzZ,GAAgaG,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACM,mBAAV,EAA3e;EACA,IAAIC,sBAAsB,GAAG,CAA7B;EACA,OAAO;IACLC,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;MAChD,IAAIP,cAAJ,EAAoB;QAClBN,OAAO,CAACc,WAAR,CAAoB,IAAIhB,YAAJ,CAAiB,uDAAjB,EAA0Ee,IAA1E,CAApB;QACA;MACD;;MAED,IAAIF,sBAAsB,GAAG,CAA7B,EAAgC;QAC9BX,OAAO,CAACc,WAAR,CAAoB,IAAIhB,YAAJ,CAAiB,0CAAjB,EAA6De,IAA7D,CAApB;MACD;;MAED,EAAEF,sBAAF;IACD;EAZI,CAAP;AAcD"},"metadata":{},"sourceType":"module"}