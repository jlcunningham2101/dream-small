{"ast":null,"code":"import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { assertName } from '../type/assertName.mjs';\n/* c8 ignore start */\n\n/**\r\n * Upholds the spec rules about naming.\r\n * @deprecated Please use `assertName` instead. Will be removed in v17\r\n */\n\nexport function assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\r\n * Returns an Error if a name is invalid.\r\n * @deprecated Please use `assertName` instead. Will be removed in v17\r\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new GraphQLError(`Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`);\n  }\n\n  try {\n    assertName(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */","map":{"version":3,"names":["devAssert","GraphQLError","assertName","assertValidName","name","error","isValidNameError","startsWith"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/utilities/assertValidName.mjs"],"sourcesContent":["import { devAssert } from '../jsutils/devAssert.mjs';\r\nimport { GraphQLError } from '../error/GraphQLError.mjs';\r\nimport { assertName } from '../type/assertName.mjs';\r\n/* c8 ignore start */\r\n\r\n/**\r\n * Upholds the spec rules about naming.\r\n * @deprecated Please use `assertName` instead. Will be removed in v17\r\n */\r\n\r\nexport function assertValidName(name) {\r\n  const error = isValidNameError(name);\r\n\r\n  if (error) {\r\n    throw error;\r\n  }\r\n\r\n  return name;\r\n}\r\n/**\r\n * Returns an Error if a name is invalid.\r\n * @deprecated Please use `assertName` instead. Will be removed in v17\r\n */\r\n\r\nexport function isValidNameError(name) {\r\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\r\n\r\n  if (name.startsWith('__')) {\r\n    return new GraphQLError(\r\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\r\n    );\r\n  }\r\n\r\n  try {\r\n    assertName(name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n/* c8 ignore stop */\r\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;EACpC,MAAMC,KAAK,GAAGC,gBAAgB,CAACF,IAAD,CAA9B;;EAEA,IAAIC,KAAJ,EAAW;IACT,MAAMA,KAAN;EACD;;EAED,OAAOD,IAAP;AACD;AACD;AACA;AACA;AACA;;AAEA,OAAO,SAASE,gBAAT,CAA0BF,IAA1B,EAAgC;EACrC,OAAOA,IAAP,KAAgB,QAAhB,IAA4BJ,SAAS,CAAC,KAAD,EAAQ,+BAAR,CAArC;;EAEA,IAAII,IAAI,CAACG,UAAL,CAAgB,IAAhB,CAAJ,EAA2B;IACzB,OAAO,IAAIN,YAAJ,CACJ,SAAQG,IAAK,yEADT,CAAP;EAGD;;EAED,IAAI;IACFF,UAAU,CAACE,IAAD,CAAV;EACD,CAFD,CAEE,OAAOC,KAAP,EAAc;IACd,OAAOA,KAAP;EACD;AACF;AACD"},"metadata":{},"sourceType":"module"}