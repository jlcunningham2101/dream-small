{"ast":null,"code":"import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Argument-Names\r\n */\n\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n\n    const argumentNodes = (_parentNode$arguments = parentNode.arguments) !== null && _parentNode$arguments !== void 0 ? _parentNode$arguments : [];\n    const seenArgs = groupBy(argumentNodes, arg => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(new GraphQLError(`There can be only one argument named \"${argName}\".`, {\n          nodes: argNodes.map(node => node.name)\n        }));\n      }\n    }\n  }\n}","map":{"version":3,"names":["groupBy","GraphQLError","UniqueArgumentNamesRule","context","Field","checkArgUniqueness","Directive","parentNode","_parentNode$arguments","argumentNodes","arguments","seenArgs","arg","name","value","argName","argNodes","length","reportError","nodes","map","node"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs"],"sourcesContent":["import { groupBy } from '../../jsutils/groupBy.mjs';\r\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Argument-Names\r\n */\r\nexport function UniqueArgumentNamesRule(context) {\r\n  return {\r\n    Field: checkArgUniqueness,\r\n    Directive: checkArgUniqueness,\r\n  };\r\n\r\n  function checkArgUniqueness(parentNode) {\r\n    var _parentNode$arguments;\r\n\r\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\r\n\r\n    /* c8 ignore next */\r\n    const argumentNodes =\r\n      (_parentNode$arguments = parentNode.arguments) !== null &&\r\n      _parentNode$arguments !== void 0\r\n        ? _parentNode$arguments\r\n        : [];\r\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\r\n\r\n    for (const [argName, argNodes] of seenArgs) {\r\n      if (argNodes.length > 1) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `There can be only one argument named \"${argName}\".`,\r\n            {\r\n              nodes: argNodes.map((node) => node.name),\r\n            },\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;EAC/C,OAAO;IACLC,KAAK,EAAEC,kBADF;IAELC,SAAS,EAAED;EAFN,CAAP;;EAKA,SAASA,kBAAT,CAA4BE,UAA5B,EAAwC;IACtC,IAAIC,qBAAJ,CADsC,CAGtC;;IAEA;;;IACA,MAAMC,aAAa,GACjB,CAACD,qBAAqB,GAAGD,UAAU,CAACG,SAApC,MAAmD,IAAnD,IACAF,qBAAqB,KAAK,KAAK,CAD/B,GAEIA,qBAFJ,GAGI,EAJN;IAKA,MAAMG,QAAQ,GAAGX,OAAO,CAACS,aAAD,EAAiBG,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAAlC,CAAxB;;IAEA,KAAK,MAAM,CAACC,OAAD,EAAUC,QAAV,CAAX,IAAkCL,QAAlC,EAA4C;MAC1C,IAAIK,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;QACvBd,OAAO,CAACe,WAAR,CACE,IAAIjB,YAAJ,CACG,yCAAwCc,OAAQ,IADnD,EAEE;UACEI,KAAK,EAAEH,QAAQ,CAACI,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACR,IAA5B;QADT,CAFF,CADF;MAQD;IACF;EACF;AACF"},"metadata":{},"sourceType":"module"}