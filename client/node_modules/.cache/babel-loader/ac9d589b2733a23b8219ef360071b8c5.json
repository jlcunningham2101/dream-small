{"ast":null,"code":"import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n/**\r\n * No deprecated\r\n *\r\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\r\n * deprecated.\r\n *\r\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\r\n * Specification. The main purpose of this rule is detection of deprecated usages and not\r\n * necessarily to forbid their use when querying a service.\r\n */\n\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(new GraphQLError(`The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(`Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(false);\n          context.reportError(new GraphQLError(`Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(`The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(new GraphQLError(`The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    }\n\n  };\n}","map":{"version":3,"names":["invariant","GraphQLError","getNamedType","isInputObjectType","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","reportError","name","nodes","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getParentInputType","inputFieldDef","getFields","value","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs"],"sourcesContent":["import { invariant } from '../../../jsutils/invariant.mjs';\r\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\r\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\r\n\r\n/**\r\n * No deprecated\r\n *\r\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\r\n * deprecated.\r\n *\r\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\r\n * Specification. The main purpose of this rule is detection of deprecated usages and not\r\n * necessarily to forbid their use when querying a service.\r\n */\r\nexport function NoDeprecatedCustomRule(context) {\r\n  return {\r\n    Field(node) {\r\n      const fieldDef = context.getFieldDef();\r\n      const deprecationReason =\r\n        fieldDef === null || fieldDef === void 0\r\n          ? void 0\r\n          : fieldDef.deprecationReason;\r\n\r\n      if (fieldDef && deprecationReason != null) {\r\n        const parentType = context.getParentType();\r\n        parentType != null || invariant(false);\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\r\n            {\r\n              nodes: node,\r\n            },\r\n          ),\r\n        );\r\n      }\r\n    },\r\n\r\n    Argument(node) {\r\n      const argDef = context.getArgument();\r\n      const deprecationReason =\r\n        argDef === null || argDef === void 0\r\n          ? void 0\r\n          : argDef.deprecationReason;\r\n\r\n      if (argDef && deprecationReason != null) {\r\n        const directiveDef = context.getDirective();\r\n\r\n        if (directiveDef != null) {\r\n          context.reportError(\r\n            new GraphQLError(\r\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\r\n              {\r\n                nodes: node,\r\n              },\r\n            ),\r\n          );\r\n        } else {\r\n          const parentType = context.getParentType();\r\n          const fieldDef = context.getFieldDef();\r\n          (parentType != null && fieldDef != null) || invariant(false);\r\n          context.reportError(\r\n            new GraphQLError(\r\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\r\n              {\r\n                nodes: node,\r\n              },\r\n            ),\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    ObjectField(node) {\r\n      const inputObjectDef = getNamedType(context.getParentInputType());\r\n\r\n      if (isInputObjectType(inputObjectDef)) {\r\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\r\n        const deprecationReason =\r\n          inputFieldDef === null || inputFieldDef === void 0\r\n            ? void 0\r\n            : inputFieldDef.deprecationReason;\r\n\r\n        if (deprecationReason != null) {\r\n          context.reportError(\r\n            new GraphQLError(\r\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\r\n              {\r\n                nodes: node,\r\n              },\r\n            ),\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    EnumValue(node) {\r\n      const enumValueDef = context.getEnumValue();\r\n      const deprecationReason =\r\n        enumValueDef === null || enumValueDef === void 0\r\n          ? void 0\r\n          : enumValueDef.deprecationReason;\r\n\r\n      if (enumValueDef && deprecationReason != null) {\r\n        const enumTypeDef = getNamedType(context.getInputType());\r\n        enumTypeDef != null || invariant(false);\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\r\n            {\r\n              nodes: node,\r\n            },\r\n          ),\r\n        );\r\n      }\r\n    },\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}