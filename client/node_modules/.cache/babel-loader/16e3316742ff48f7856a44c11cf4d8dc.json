{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * Unique operation names\r\n *\r\n * A GraphQL document is only valid if all defined operations have unique names.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\r\n */\n\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(`There can be only one operation named \"${operationName.value}\".`, {\n            nodes: [knownOperationNames[operationName.value], operationName]\n          }));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueOperationNamesRule","context","knownOperationNames","Object","create","OperationDefinition","node","operationName","name","value","reportError","nodes","FragmentDefinition"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * Unique operation names\r\n *\r\n * A GraphQL document is only valid if all defined operations have unique names.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\r\n */\r\nexport function UniqueOperationNamesRule(context) {\r\n  const knownOperationNames = Object.create(null);\r\n  return {\r\n    OperationDefinition(node) {\r\n      const operationName = node.name;\r\n\r\n      if (operationName) {\r\n        if (knownOperationNames[operationName.value]) {\r\n          context.reportError(\r\n            new GraphQLError(\r\n              `There can be only one operation named \"${operationName.value}\".`,\r\n              {\r\n                nodes: [\r\n                  knownOperationNames[operationName.value],\r\n                  operationName,\r\n                ],\r\n              },\r\n            ),\r\n          );\r\n        } else {\r\n          knownOperationNames[operationName.value] = operationName;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    FragmentDefinition: () => false,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EAChD,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA5B;EACA,OAAO;IACLC,mBAAmB,CAACC,IAAD,EAAO;MACxB,MAAMC,aAAa,GAAGD,IAAI,CAACE,IAA3B;;MAEA,IAAID,aAAJ,EAAmB;QACjB,IAAIL,mBAAmB,CAACK,aAAa,CAACE,KAAf,CAAvB,EAA8C;UAC5CR,OAAO,CAACS,WAAR,CACE,IAAIX,YAAJ,CACG,0CAAyCQ,aAAa,CAACE,KAAM,IADhE,EAEE;YACEE,KAAK,EAAE,CACLT,mBAAmB,CAACK,aAAa,CAACE,KAAf,CADd,EAELF,aAFK;UADT,CAFF,CADF;QAWD,CAZD,MAYO;UACLL,mBAAmB,CAACK,aAAa,CAACE,KAAf,CAAnB,GAA2CF,aAA3C;QACD;MACF;;MAED,OAAO,KAAP;IACD,CAvBI;;IAyBLK,kBAAkB,EAAE,MAAM;EAzBrB,CAAP;AA2BD"},"metadata":{},"sourceType":"module"}