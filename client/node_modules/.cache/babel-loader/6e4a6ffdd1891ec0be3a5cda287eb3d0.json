{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dani\\\\Desktop\\\\projects\\\\dream-small\\\\dream-small\\\\client\\\\src\\\\components\\\\PostForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_POST } from \"../../utils/mutations\";\nimport { QUERY_POSTS, QUERY_ME } from \"../../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  const [postText, setText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addPost, {\n    error\n  }] = useMutation(ADD_POST, {\n    update(cache, _ref) {\n      let {\n        data: {\n          addPost\n        }\n      } = _ref;\n\n      try {\n        // update post's array's cache\n        // could potentially not exist yet, so wrap in a try/catch\n        const {\n          posts\n        } = cache.readQuery({\n          query: QUERY_POSTS\n        });\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: {\n            posts: [addPosts, ...posts]\n          }\n        });\n      } catch (e) {\n        console.error(e);\n      } // update me object's cache\n\n\n      const {\n        me\n      } = cache.readQuery({\n        query: QUERY_ME\n      });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: {\n          me: { ...me,\n            posts: [...me.posts, addPost]\n          }\n        }\n      });\n    }\n\n  }); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addPost({\n        variables: {\n          postText\n        }\n      }); // clear form value\n\n      setText(\"\");\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `m-0 ${characterCount === 280 || error ? \"text-error\" : \"\"}`,\n      children: [\"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-stretch\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Here's a new post...\",\n        value: postText,\n        className: \"form-input col-12 col-md-9\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-12 col-md-3\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"+26slPky4B98W8lzF3BsoN89tug=\", false, function () {\n  return [useMutation];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useMutation","ADD_POST","QUERY_POSTS","QUERY_ME","PostForm","postText","setText","characterCount","setCharacterCount","addPost","error","update","cache","data","posts","readQuery","query","writeQuery","addPosts","e","console","me","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/client/src/components/PostForm/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_POST } from \"../../utils/mutations\";\r\nimport { QUERY_POSTS, QUERY_ME } from \"../../utils/queries\";\r\n\r\nconst PostForm = () => {\r\n  const [postText, setText] = useState(\"\");\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addPost, { error }] = useMutation(ADD_POST, {\r\n    update(cache, { data: { addPost } }) {\r\n      try {\r\n        // update post's array's cache\r\n        // could potentially not exist yet, so wrap in a try/catch\r\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\r\n        cache.writeQuery({\r\n          query: QUERY_POSTS,\r\n          data: { posts: [addPosts, ...posts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, posts: [...me.posts, addPost] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    if (event.target.value.length <= 280) {\r\n      setText(event.target.value);\r\n      setCharacterCount(event.target.value.length);\r\n    }\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await addPost({\r\n        variables: { postText },\r\n      });\r\n\r\n      // clear form value\r\n      setText(\"\");\r\n      setCharacterCount(0);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p\r\n        className={`m-0 ${characterCount === 280 || error ? \"text-error\" : \"\"}`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <textarea\r\n          placeholder=\"Here's a new post...\"\r\n          value={postText}\r\n          className=\"form-input col-12 col-md-9\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}