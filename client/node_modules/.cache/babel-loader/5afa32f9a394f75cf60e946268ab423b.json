{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","didYouMean","suggestionList","GraphQLError","Kind","specifiedDirectives","KnownArgumentNamesRule","context","KnownArgumentNamesOnDirectivesRule","Argument","argNode","argDef","getArgument","fieldDef","getFieldDef","parentType","getParentType","argName","name","knownArgsNames","args","map","arg","suggestions","reportError","concat","directiveArgs","create","schema","getSchema","definedDirectives","getDirectives","_i2","directive","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","_def$arguments","argsNodes","Directive","directiveNode","directiveName","knownArgs","_i6","_directiveNode$argume2","indexOf"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + didYouMean(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = suggestionList(argName, knownArgs);\n            context.reportError(new GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}