{"ast":null,"code":"function maybe(thunk) {\n  try {\n    return thunk();\n  } catch (_) {}\n}\n\nvar safeGlobal = maybe(function () {\n  return globalThis;\n}) || maybe(function () {\n  return window;\n}) || maybe(function () {\n  return self;\n}) || maybe(function () {\n  return global;\n}) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n  return maybe.constructor(\"return this\")();\n});\nvar needToRemove = false;\nexport function install() {\n  if (safeGlobal && !maybe(function () {\n    return process.env.NODE_ENV;\n  }) && !maybe(function () {\n    return process;\n  })) {\n    Object.defineProperty(safeGlobal, \"process\", {\n      value: {\n        env: {\n          // This default needs to be \"production\" instead of \"development\", to\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\n          // will eventually solve, once merged and released.\n          NODE_ENV: \"production\"\n        }\n      },\n      // Let anyone else change global.process as they see fit, but hide it from\n      // Object.keys(global) enumeration.\n      configurable: true,\n      enumerable: false,\n      writable: true\n    });\n    needToRemove = true;\n  }\n} // Call install() at least once, when this module is imported.\n\ninstall();\nexport function remove() {\n  if (needToRemove) {\n    delete safeGlobal.process;\n    needToRemove = false;\n  }\n}","map":{"version":3,"names":["maybe","thunk","_","safeGlobal","globalThis","window","self","global","constructor","needToRemove","install","process","env","NODE_ENV","Object","defineProperty","value","configurable","enumerable","writable","remove"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/ts-invariant/process/index.js"],"sourcesContent":["function maybe(thunk) {\r\n  try { return thunk() } catch (_) {}\r\n}\r\n\r\nvar safeGlobal = (\r\n  maybe(function() { return globalThis }) ||\r\n  maybe(function() { return window }) ||\r\n  maybe(function() { return self }) ||\r\n  maybe(function() { return global }) ||\r\n  // We don't expect the Function constructor ever to be invoked at runtime, as\r\n  // long as at least one of globalThis, window, self, or global is defined, so\r\n  // we are under no obligation to make it easy for static analysis tools to\r\n  // detect syntactic usage of the Function constructor. If you think you can\r\n  // improve your static analysis to detect this obfuscation, think again. This\r\n  // is an arms race you cannot win, at least not in JavaScript.\r\n  maybe(function() { return maybe.constructor(\"return this\")() })\r\n);\r\n\r\nvar needToRemove = false;\r\n\r\nexport function install() {\r\n  if (safeGlobal &&\r\n      !maybe(function() { return process.env.NODE_ENV }) &&\r\n      !maybe(function() { return process })) {\r\n    Object.defineProperty(safeGlobal, \"process\", {\r\n      value: {\r\n        env: {\r\n          // This default needs to be \"production\" instead of \"development\", to\r\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\r\n          // will eventually solve, once merged and released.\r\n          NODE_ENV: \"production\",\r\n        },\r\n      },\r\n      // Let anyone else change global.process as they see fit, but hide it from\r\n      // Object.keys(global) enumeration.\r\n      configurable: true,\r\n      enumerable: false,\r\n      writable: true,\r\n    });\r\n    needToRemove = true;\r\n  }\r\n}\r\n\r\n// Call install() at least once, when this module is imported.\r\ninstall();\r\n\r\nexport function remove() {\r\n  if (needToRemove) {\r\n    delete safeGlobal.process;\r\n    needToRemove = false;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAT,CAAeC,KAAf,EAAsB;EACpB,IAAI;IAAE,OAAOA,KAAK,EAAZ;EAAgB,CAAtB,CAAuB,OAAOC,CAAP,EAAU,CAAE;AACpC;;AAED,IAAIC,UAAU,GACZH,KAAK,CAAC,YAAW;EAAE,OAAOI,UAAP;AAAmB,CAAjC,CAAL,IACAJ,KAAK,CAAC,YAAW;EAAE,OAAOK,MAAP;AAAe,CAA7B,CADL,IAEAL,KAAK,CAAC,YAAW;EAAE,OAAOM,IAAP;AAAa,CAA3B,CAFL,IAGAN,KAAK,CAAC,YAAW;EAAE,OAAOO,MAAP;AAAe,CAA7B,CAHL,IAIA;AACA;AACA;AACA;AACA;AACA;AACAP,KAAK,CAAC,YAAW;EAAE,OAAOA,KAAK,CAACQ,WAAN,CAAkB,aAAlB,GAAP;AAA2C,CAAzD,CAXP;AAcA,IAAIC,YAAY,GAAG,KAAnB;AAEA,OAAO,SAASC,OAAT,GAAmB;EACxB,IAAIP,UAAU,IACV,CAACH,KAAK,CAAC,YAAW;IAAE,OAAOW,OAAO,CAACC,GAAR,CAAYC,QAAnB;EAA6B,CAA3C,CADN,IAEA,CAACb,KAAK,CAAC,YAAW;IAAE,OAAOW,OAAP;EAAgB,CAA9B,CAFV,EAE2C;IACzCG,MAAM,CAACC,cAAP,CAAsBZ,UAAtB,EAAkC,SAAlC,EAA6C;MAC3Ca,KAAK,EAAE;QACLJ,GAAG,EAAE;UACH;UACA;UACA;UACAC,QAAQ,EAAE;QAJP;MADA,CADoC;MAS3C;MACA;MACAI,YAAY,EAAE,IAX6B;MAY3CC,UAAU,EAAE,KAZ+B;MAa3CC,QAAQ,EAAE;IAbiC,CAA7C;IAeAV,YAAY,GAAG,IAAf;EACD;AACF,C,CAED;;AACAC,OAAO;AAEP,OAAO,SAASU,MAAT,GAAkB;EACvB,IAAIX,YAAJ,EAAkB;IAChB,OAAON,UAAU,CAACQ,OAAlB;IACAF,YAAY,GAAG,KAAf;EACD;AACF"},"metadata":{},"sourceType":"module"}