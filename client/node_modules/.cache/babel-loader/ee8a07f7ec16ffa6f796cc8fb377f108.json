{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\nimport { isType, isRequiredArgument } from \"../../type/definition.mjs\";\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\n\nexport function ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            var argTypeStr = inspect(argDef.type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = keyMap(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = keyMap(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = isType(argType) ? inspect(argType) : print(argType);\n              context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","inspect","keyMap","GraphQLError","Kind","print","specifiedDirectives","isType","isRequiredArgument","ProvidedRequiredArgumentsRule","context","ProvidedRequiredArgumentsOnDirectivesRule","Field","leave","fieldNode","_fieldNode$arguments","fieldDef","getFieldDef","argNodes","argNodeMap","arg","name","_i2","_fieldDef$args2","args","argDef","argNode","argTypeStr","type","reportError","concat","requiredArgsMap","create","schema","getSchema","definedDirectives","getDirectives","_i4","directive","astDefinitions","getDocument","definitions","_i6","def","kind","DIRECTIVE_DEFINITION","_def$arguments","isRequiredArgumentNode","Directive","directiveNode","directiveName","requiredArgs","_directiveNode$argume","_argNodes","_i8","_Object$keys2","argName","argType","NON_NULL_TYPE","defaultValue"],"sources":["C:/Users/jleig/Desktop/challenges/dream-small/client/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport keyMap from \"../../jsutils/keyMap.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { print } from \"../../language/printer.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\nimport { isType, isRequiredArgument } from \"../../type/definition.mjs\";\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && isRequiredArgument(argDef)) {\n            var argTypeStr = inspect(argDef.type);\n            context.reportError(new GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = keyMap(directive.args.filter(isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = keyMap(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = keyMap(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = isType(argType) ? inspect(argType) : print(argType);\n              context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}