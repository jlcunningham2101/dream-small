{"ast":null,"code":"/**\r\n * Returns a number indicating whether a reference string comes before, or after,\r\n * or is the same as the given string in natural sort order.\r\n *\r\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\r\n *\r\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}","map":{"version":3,"names":["naturalCompare","aStr","bStr","aIndex","bIndex","length","aChar","charCodeAt","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","code","isNaN"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/jsutils/naturalCompare.mjs"],"sourcesContent":["/**\r\n * Returns a number indicating whether a reference string comes before, or after,\r\n * or is the same as the given string in natural sort order.\r\n *\r\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\r\n *\r\n */\r\nexport function naturalCompare(aStr, bStr) {\r\n  let aIndex = 0;\r\n  let bIndex = 0;\r\n\r\n  while (aIndex < aStr.length && bIndex < bStr.length) {\r\n    let aChar = aStr.charCodeAt(aIndex);\r\n    let bChar = bStr.charCodeAt(bIndex);\r\n\r\n    if (isDigit(aChar) && isDigit(bChar)) {\r\n      let aNum = 0;\r\n\r\n      do {\r\n        ++aIndex;\r\n        aNum = aNum * 10 + aChar - DIGIT_0;\r\n        aChar = aStr.charCodeAt(aIndex);\r\n      } while (isDigit(aChar) && aNum > 0);\r\n\r\n      let bNum = 0;\r\n\r\n      do {\r\n        ++bIndex;\r\n        bNum = bNum * 10 + bChar - DIGIT_0;\r\n        bChar = bStr.charCodeAt(bIndex);\r\n      } while (isDigit(bChar) && bNum > 0);\r\n\r\n      if (aNum < bNum) {\r\n        return -1;\r\n      }\r\n\r\n      if (aNum > bNum) {\r\n        return 1;\r\n      }\r\n    } else {\r\n      if (aChar < bChar) {\r\n        return -1;\r\n      }\r\n\r\n      if (aChar > bChar) {\r\n        return 1;\r\n      }\r\n\r\n      ++aIndex;\r\n      ++bIndex;\r\n    }\r\n  }\r\n\r\n  return aStr.length - bStr.length;\r\n}\r\nconst DIGIT_0 = 48;\r\nconst DIGIT_9 = 57;\r\n\r\nfunction isDigit(code) {\r\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EACzC,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,MAAM,GAAG,CAAb;;EAEA,OAAOD,MAAM,GAAGF,IAAI,CAACI,MAAd,IAAwBD,MAAM,GAAGF,IAAI,CAACG,MAA7C,EAAqD;IACnD,IAAIC,KAAK,GAAGL,IAAI,CAACM,UAAL,CAAgBJ,MAAhB,CAAZ;IACA,IAAIK,KAAK,GAAGN,IAAI,CAACK,UAAL,CAAgBH,MAAhB,CAAZ;;IAEA,IAAIK,OAAO,CAACH,KAAD,CAAP,IAAkBG,OAAO,CAACD,KAAD,CAA7B,EAAsC;MACpC,IAAIE,IAAI,GAAG,CAAX;;MAEA,GAAG;QACD,EAAEP,MAAF;QACAO,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAYJ,KAAZ,GAAoBK,OAA3B;QACAL,KAAK,GAAGL,IAAI,CAACM,UAAL,CAAgBJ,MAAhB,CAAR;MACD,CAJD,QAISM,OAAO,CAACH,KAAD,CAAP,IAAkBI,IAAI,GAAG,CAJlC;;MAMA,IAAIE,IAAI,GAAG,CAAX;;MAEA,GAAG;QACD,EAAER,MAAF;QACAQ,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAYJ,KAAZ,GAAoBG,OAA3B;QACAH,KAAK,GAAGN,IAAI,CAACK,UAAL,CAAgBH,MAAhB,CAAR;MACD,CAJD,QAISK,OAAO,CAACD,KAAD,CAAP,IAAkBI,IAAI,GAAG,CAJlC;;MAMA,IAAIF,IAAI,GAAGE,IAAX,EAAiB;QACf,OAAO,CAAC,CAAR;MACD;;MAED,IAAIF,IAAI,GAAGE,IAAX,EAAiB;QACf,OAAO,CAAP;MACD;IACF,CAxBD,MAwBO;MACL,IAAIN,KAAK,GAAGE,KAAZ,EAAmB;QACjB,OAAO,CAAC,CAAR;MACD;;MAED,IAAIF,KAAK,GAAGE,KAAZ,EAAmB;QACjB,OAAO,CAAP;MACD;;MAED,EAAEL,MAAF;MACA,EAAEC,MAAF;IACD;EACF;;EAED,OAAOH,IAAI,CAACI,MAAL,GAAcH,IAAI,CAACG,MAA1B;AACD;AACD,MAAMM,OAAO,GAAG,EAAhB;AACA,MAAME,OAAO,GAAG,EAAhB;;AAEA,SAASJ,OAAT,CAAiBK,IAAjB,EAAuB;EACrB,OAAO,CAACC,KAAK,CAACD,IAAD,CAAN,IAAgBH,OAAO,IAAIG,IAA3B,IAAmCA,IAAI,IAAID,OAAlD;AACD"},"metadata":{},"sourceType":"module"}