{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * No unused fragments\r\n *\r\n * A GraphQL document is only valid if all fragment definitions are spread\r\n * within operations, or spread within other fragments spread within operations.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\r\n */\n\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(operation)) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n              nodes: fragmentDef\n            }));\n          }\n        }\n      }\n\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","NoUnusedFragmentsRule","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","Object","create","operation","fragment","getRecursivelyReferencedFragments","name","value","fragmentDef","fragName","reportError","nodes"],"sources":["C:/Users/Dani/Desktop/projects/dream-small/dream-small/node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * No unused fragments\r\n *\r\n * A GraphQL document is only valid if all fragment definitions are spread\r\n * within operations, or spread within other fragments spread within operations.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\r\n */\r\nexport function NoUnusedFragmentsRule(context) {\r\n  const operationDefs = [];\r\n  const fragmentDefs = [];\r\n  return {\r\n    OperationDefinition(node) {\r\n      operationDefs.push(node);\r\n      return false;\r\n    },\r\n\r\n    FragmentDefinition(node) {\r\n      fragmentDefs.push(node);\r\n      return false;\r\n    },\r\n\r\n    Document: {\r\n      leave() {\r\n        const fragmentNameUsed = Object.create(null);\r\n\r\n        for (const operation of operationDefs) {\r\n          for (const fragment of context.getRecursivelyReferencedFragments(\r\n            operation,\r\n          )) {\r\n            fragmentNameUsed[fragment.name.value] = true;\r\n          }\r\n        }\r\n\r\n        for (const fragmentDef of fragmentDefs) {\r\n          const fragName = fragmentDef.name.value;\r\n\r\n          if (fragmentNameUsed[fragName] !== true) {\r\n            context.reportError(\r\n              new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\r\n                nodes: fragmentDef,\r\n              }),\r\n            );\r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;EAC7C,MAAMC,aAAa,GAAG,EAAtB;EACA,MAAMC,YAAY,GAAG,EAArB;EACA,OAAO;IACLC,mBAAmB,CAACC,IAAD,EAAO;MACxBH,aAAa,CAACI,IAAd,CAAmBD,IAAnB;MACA,OAAO,KAAP;IACD,CAJI;;IAMLE,kBAAkB,CAACF,IAAD,EAAO;MACvBF,YAAY,CAACG,IAAb,CAAkBD,IAAlB;MACA,OAAO,KAAP;IACD,CATI;;IAWLG,QAAQ,EAAE;MACRC,KAAK,GAAG;QACN,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;;QAEA,KAAK,MAAMC,SAAX,IAAwBX,aAAxB,EAAuC;UACrC,KAAK,MAAMY,QAAX,IAAuBb,OAAO,CAACc,iCAAR,CACrBF,SADqB,CAAvB,EAEG;YACDH,gBAAgB,CAACI,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAhB,GAAwC,IAAxC;UACD;QACF;;QAED,KAAK,MAAMC,WAAX,IAA0Bf,YAA1B,EAAwC;UACtC,MAAMgB,QAAQ,GAAGD,WAAW,CAACF,IAAZ,CAAiBC,KAAlC;;UAEA,IAAIP,gBAAgB,CAACS,QAAD,CAAhB,KAA+B,IAAnC,EAAyC;YACvClB,OAAO,CAACmB,WAAR,CACE,IAAIrB,YAAJ,CAAkB,aAAYoB,QAAS,kBAAvC,EAA0D;cACxDE,KAAK,EAAEH;YADiD,CAA1D,CADF;UAKD;QACF;MACF;;IAvBO;EAXL,CAAP;AAqCD"},"metadata":{},"sourceType":"module"}